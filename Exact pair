Given an unsorted array Arr[] and a number N. You need to write a program to find if there exists a pair of elements in the array whose difference is N.

Input Format

First line of input contains an integer T which denotes the number of test cases. Then T test cases follow. First line of each test case contains two space separated integers L and N where L denotes the length of array or the number of elements in the array and N denotes the difference between two elements. Second line of each test case contains L space separated integers which denotes the elements of the array.

Constraints

1<=T<=100 1<=L<=104 1<=Arr[i]<=105

Output Format

For each test case, in a new line print 1 if the pair is found otherwise print -1 if there does not exist any such pair.

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
      /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */ 
        
        Scanner s=new  Scanner(System.in);
        int t=s.nextInt();
        while(t>0)
        {
            int n=s.nextInt();
            int k=s.nextInt();
            int a[]=new int[n];
            int c=0;
            int i,j;
            for(i=0;i<n;i++)
            {
               a[i]=s.nextInt();
            }
            for(i=0;i<n-1;i++)
            {
                for(j=i+1;j<n;j++)
                {
                    int r=Math.abs(a[i]-a[j]);
                    if(k==r)
                    {
                        System.out.println(1);
                        c=1;
                        break;
                    }
                }
            }
            if(c==0)
            System.out.println(-1);
            t--;
        }
    }
}
Congratulations, you passed the sample test case.

Click the Submit Code button to run your code against all the test cases.

Input (stdin)

2
6 78
5 20 3 2 5 80
5 45
90 70 20 80 50
Your Output (stdout)

1
-1
Expected Output

1
-1
